@using PagedList;
@using PagedList.Mvc;
@model IPagedList<MVCDemo4.Models.Employee>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
<div>
<p>
    @Html.ActionLink("Create New", "Create")

</p>
<p>
    @using (@Html.BeginForm("Index", "Home", FormMethod.Get))
    {
        <b>Search By:</b>
        @Html.RadioButton("searchBy", "Name", true) <text>Name</text>
        @Html.RadioButton("searchBy", "Gender") <text>Gender</text><br />
        @Html.TextBox("search") <input type="submit" value="search" />
    }
</p>
    <table border="1" class="table">
        <tr>
            <th>
            @Html.ActionLink("Name", "Index", new { sortBy = ViewBag.NameSort, searchBy = Request["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.ActionLink("Gender", "Index", new { sortBy = ViewBag.GenderSort, searchBy = Request["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th></th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="4">
                    No records match search criteria
                </td>
            </tr>
        }
        else
        {

            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new {id = item.ID}) |
                        @Html.ActionLink("Details", "Details", new {id = item.ID}) |
                        @Html.ActionLink("Delete", "Delete", new {id = item.ID})
                    </td>
                </tr>
            }
        }
    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request["sortBy"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
</div>
</body>
</html>
